# The input parts
{
    # Shows a list of options
    "Type" = [
        "feat",
        "fix",
        "docs",
        "style",
        "refactor",
        "test",
        "chore"
    ]
    "Scope" = [
        "shexml-interpreter",
        "rml-interpreter", 
        "translator/rml", 
        "translator/shexml", 
        "plangenerator", 
        "engine",
        "vocab", 
        "operator", 
        "bin",""
    ]
    "Subject" = @
    "Body" = !@ # Multi-line input
    "Footer" = !@
}

# predefined messages
# this section is optional
{
    deadcode = "chore: remove deadcode"
    clippy  = "chore: clippy fix warnings"
    println = "chore: remove printlns"
    style =  "style: rustfmt file"
    vb = "chore: version bump"
    todo = "chore: add todo"
    readme = "docs: updated readme"
    ignore = "docs: updated .gitignore"
    cmt = "chore: update .cmt"
    cargo = "chore: update cargo.toml"
    testresource = "chore: add test resources"
    spell = "chore: spelling correction"
    logging = "chore: add more log statements"
}

# The output format
# Takes the values provided from the input stage
# and interpolates them in
${Type} (${Scope}): ${Subject}

${Body}

${Footer}
